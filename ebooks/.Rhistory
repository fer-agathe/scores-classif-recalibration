largest_xgb <-
metrics_xgb_all |>
filter(sample == "Validation", recalib == "None") |>
arrange(desc(nb_iter)) |>
slice_head(n = 1) |>
select(ind, nb_iter, recalib) |>
mutate(result_type = "largest")
# Identify tree with highest AUC on test set
highest_auc_xgb <-
metrics_xgb_all |>
filter(sample == "Validation", recalib == "None") |>
arrange(desc(AUC)) |>
slice_head(n = 1) |>
select(ind, nb_iter, recalib) |>
mutate(result_type = "largest_auc")
# Identify tree with lowest brier
lowest_brier_xgb <-
metrics_xgb_all |>
filter(sample == "Validation", recalib == "None") |>
arrange(brier) |>
slice_head(n = 1) |>
select(ind, nb_iter, recalib) |>
mutate(result_type = "lowest_brier")
# Identify tree with lowest ICI
lowest_ici_xgb <-
metrics_xgb_all |>
filter(sample == "Validation", recalib == "None") |>
arrange(ici) |>
slice_head(n = 1) |>
select(ind, nb_iter, recalib) |>
mutate(result_type = "lowest_ici")
# Identify tree with lowest KL
lowest_kl_xgb <-
metrics_xgb_all |>
filter(sample == "Validation", recalib == "None") |>
arrange(KL_20_true_probas) |>
slice_head(n = 1) |>
select(ind, nb_iter, recalib) |>
mutate(result_type = "lowest_kl")
mediocre_ici_xgb <-
metrics_xgb_all |>
filter(sample == "Validation", recalib == "None") |>
arrange(desc(ici)) |>
#slice_head(n = 1) |>
filter(nb_iter == 10 & ind == 1) |>
select(ind, nb_iter, recalib) |>
mutate(result_type = "mediocre_ici")
# Merge these
models_of_interest_xgb <-
smallest_xgb |>
bind_rows(largest_xgb) |>
bind_rows(highest_auc_xgb) |>
bind_rows(lowest_brier_xgb) |>
bind_rows(lowest_ici_xgb) |>
bind_rows(lowest_kl_xgb) |>
bind_rows(mediocre_ici_xgb)
models_of_interest_metrics <- NULL
for (recalibration_method in c("None", "Platt", "Isotonic")) {
# Add metrics now
models_of_interest_metrics <-
models_of_interest_metrics |>
bind_rows(
models_of_interest_xgb |> select(-recalib) |>
left_join(
metrics_xgb_all |>
filter(
recalib == recalibration_method,
sample %in% c("Validation", "Test")
),
by = c("ind", "nb_iter"),
relationship = "many-to-many" # (calib, test)
)
)
}
models_of_interest_metrics <-
models_of_interest_metrics |>
mutate(
result_type = factor(
result_type,
levels = c(
"smallest", "largest", "lowest_mse", "largest_auc",
"lowest_brier", "lowest_ici", "lowest_kl", "mediocre_ici"),
labels = c(
"Smallest", "Largest", "MSE*", "AUC*",
"Brier*", "ICI*", "KL*", "High ICI"
)
)
)
models_of_interest_metrics
}
#' Function to format results for selected models for later use in ggplot2
get_data_plot_before_after_recalib <- function(xgb_resul, dataset_name) {
models_of_interest_metrics <- gather_metrics(xgb_resul = xgb_resul)
table_models_interest <-
models_of_interest_metrics |>
filter(sample == "Test") |>
select(
recalib, sample, result_type,
brier, ici, kl = KL_20_true_probas
) |>
filter(
result_type %in% c("AUC*", "KL*", "High ICI")
) |>
mutate(dataset = dataset_name)
initial_points <- table_models_interest |>
filter(recalib == "None") |>
mutate(dataset = dataset_name)
points_after_c <- initial_points |>
select(result_type, ici, kl) |>
left_join(
table_models_interest |>
filter(recalib %in% c("Platt", "Isotonic")) |>
select(recalib, result_type, ici, kl) |>
rename(ici_end = ici, kl_end = kl),
by = "result_type",
relationship = "many-to-many" # (Platt and Isotonic)
) |>
mutate(dataset = dataset_name)
list(
table_models_interest = table_models_interest,
initial_points = initial_points,
points_after_c = points_after_c
)
}
# The models of interest for all datasets
data_plot_before_after <- map2(
.x = str_c("xgb_resul_", datasets$name),
.y = datasets$name,
.f = ~get_data_plot_before_after_recalib(xgb_resul = get(.x), dataset_name = .y)
)
# The metrics for these models
table_models_interest <-
map(data_plot_before_after, "table_models_interest") |>
list_rbind()
# The metrics for the three models of interest in the subsequent plot
# before recalibration
initial_points <-
map(data_plot_before_after, "initial_points") |>
list_rbind()
# and after recalibration
points_after_c <-
map(data_plot_before_after, "points_after_c") |>
list_rbind()
data_plot_before_after
table_models_interest
table_models_interest
models_of_interest_metrics
models_interest_xgb
table_models_interest |>
group_by(dataset, recalib, sample, result_type)
table_models_interest |>
group_by(dataset, recalib, sample, result_type) |>
summarise(
AUC_lower = quantile(AUC, probs = 2.5/100),
AUC_upper = quantile(AUC, probs = 97.5/100),
AUC_sd = sd(AUC),
AUC = mean(AUC),
brier_lower = quantile(brier, probs = 2.5/100),
brier_upper = quantile(brier, probs = 97.5/100),
brier_sd = sd(brier),
brier = mean(brier),
ici_lower = quantile(ici, probs = 2.5/100),
ici_upper = quantile(ici, probs = 97.5/100),
ici_sd = sd(ici),
ici = mean(ici),
KL_20_true_probas_lower = quantile(KL_20_true_probas, probs = 2.5/100),
KL_20_true_probas_upper = quantile(KL_20_true_probas, probs = 97.5/100),
KL_20_true_probas_sd = sd(KL_20_true_probas),
KL_20_true_probas = mean(KL_20_true_probas),
quant_ratio_sd = sd(inter_quantile_10_90),
quant_ratio = mean(inter_quantile_10_90),
.groups = "drop"
)
table_models_interest
table_models_interest
#' Function to format results for selected models for later use in ggplot2
get_data_plot_before_after_recalib <- function(xgb_resul, dataset_name) {
models_of_interest_metrics <- gather_metrics(xgb_resul = xgb_resul)
table_models_interest <-
models_of_interest_metrics |>
filter(sample == "Test") |>
select(
recalib, sample, result_type,
AUC, brier, ici, kl = KL_20_true_probas
) |>
filter(
result_type %in% c("AUC*", "KL*", "High ICI")
) |>
mutate(dataset = dataset_name)
initial_points <- table_models_interest |>
filter(recalib == "None") |>
mutate(dataset = dataset_name)
points_after_c <- initial_points |>
select(result_type, ici, kl) |>
left_join(
table_models_interest |>
filter(recalib %in% c("Platt", "Isotonic")) |>
select(recalib, result_type, ici, kl) |>
rename(ici_end = ici, kl_end = kl),
by = "result_type",
relationship = "many-to-many" # (Platt and Isotonic)
) |>
mutate(dataset = dataset_name)
list(
table_models_interest = table_models_interest,
initial_points = initial_points,
points_after_c = points_after_c
)
}
# The models of interest for all datasets
data_plot_before_after <- map2(
.x = str_c("xgb_resul_", datasets$name),
.y = datasets$name,
.f = ~get_data_plot_before_after_recalib(xgb_resul = get(.x), dataset_name = .y)
)
# The metrics for these models
table_models_interest <-
map(data_plot_before_after, "table_models_interest") |>
list_rbind()
# The metrics for the three models of interest in the subsequent plot
# before recalibration
initial_points <-
map(data_plot_before_after, "initial_points") |>
list_rbind()
# and after recalibration
points_after_c <-
map(data_plot_before_after, "points_after_c") |>
list_rbind()
table_models_interest |>
group_by(dataset, recalib, sample, result_type) |>
summarise(
AUC_lower = quantile(AUC, probs = 2.5/100),
AUC_upper = quantile(AUC, probs = 97.5/100),
AUC_sd = sd(AUC),
AUC = mean(AUC),
brier_lower = quantile(brier, probs = 2.5/100),
brier_upper = quantile(brier, probs = 97.5/100),
brier_sd = sd(brier),
brier = mean(brier),
ici_lower = quantile(ici, probs = 2.5/100),
ici_upper = quantile(ici, probs = 97.5/100),
ici_sd = sd(ici),
ici = mean(ici),
KL_20_true_probas_lower = quantile(KL_20_true_probas, probs = 2.5/100),
KL_20_true_probas_upper = quantile(KL_20_true_probas, probs = 97.5/100),
KL_20_true_probas_sd = sd(KL_20_true_probas),
KL_20_true_probas = mean(KL_20_true_probas),
quant_ratio_sd = sd(inter_quantile_10_90),
quant_ratio = mean(inter_quantile_10_90),
.groups = "drop"
)
table_models_interest
table_models_interest |>
group_by(dataset, recalib, sample, result_type) |>
summarise(
AUC_lower = quantile(AUC, probs = 2.5/100),
AUC_upper = quantile(AUC, probs = 97.5/100),
AUC_sd = sd(AUC),
AUC = mean(AUC),
brier_lower = quantile(brier, probs = 2.5/100),
brier_upper = quantile(brier, probs = 97.5/100),
brier_sd = sd(brier),
brier = mean(brier),
ici_lower = quantile(ici, probs = 2.5/100),
ici_upper = quantile(ici, probs = 97.5/100),
ici_sd = sd(ici),
ici = mean(ici),
kl_lower = quantile(kl, probs = 2.5/100),
kl_upper = quantile(kl, probs = 97.5/100),
kl_sd = sd(kl),
kl = mean(kl),
.groups = "drop"
)
models_interest_xgb <- table_models_interest |>
group_by(dataset, recalib, sample, result_type) |>
summarise(
AUC_lower = quantile(AUC, probs = 2.5/100),
AUC_upper = quantile(AUC, probs = 97.5/100),
AUC_sd = sd(AUC),
AUC = mean(AUC),
brier_lower = quantile(brier, probs = 2.5/100),
brier_upper = quantile(brier, probs = 97.5/100),
brier_sd = sd(brier),
brier = mean(brier),
ici_lower = quantile(ici, probs = 2.5/100),
ici_upper = quantile(ici, probs = 97.5/100),
ici_sd = sd(ici),
ici = mean(ici),
kl_lower = quantile(kl, probs = 2.5/100),
kl_upper = quantile(kl, probs = 97.5/100),
kl_sd = sd(kl),
kl = mean(kl),
.groups = "drop"
)
models_interest_xgb
models_interest_xgb |>
filter(sample == "test") |>
select(
dataset, recalib, sample, result_type,
brier, ici, kl,
)
models_interest_xgb
models_interest_xgb |>
filter(sample == "Test") |>
select(
dataset, recalib, sample, result_type,
brier, ici, kl,
)
table_models_interest_mean <-
models_interest_xgb |>
filter(sample == "Test") |>
select(
dataset, recalib, sample, result_type,
brier, ici, kl,
) |>
filter(
result_type %in% c("AUC*", "KL*", "High ICI", "Smallest", "Largest")
) |>
mutate(value_type = "mean")
table_models_interest_sd <-
models_interest_xgb |>
filter(sample == "Test") |>
select(
dataset, recalib, sample, result_type,
brier = brier_sd, ici = ici_sd, kl = kl_sd,
) |>
filter(
result_type %in% c("AUC*", "KL*", "High ICI", "Smallest", "Largest")
) |>
mutate(value_type = "sd")
table_models_interest_sd
table_models_interest_mean
models_interest_xgb
View(models_interest_xgb)
table_models_interest
table_models_interest
models_interest_xgb
rm(models_interest_xgb)
table_models_interest_mean <-
table_models_interest |>
filter(sample == "Test") |>
select(
dataset, recalib, sample, result_type,
brier, ici, kl,
) |>
filter(
result_type %in% c("AUC*", "KL*", "High ICI", "Smallest", "Largest")
) |>
mutate(value_type = "mean")
table_models_interest_mean
# The metrics for these models
table_models_interest <-
map(data_plot_before_after, "table_models_interest") |>
list_rbind()
table_models_interest
table_models_interest |>
pivot_longer(cols = c(brier, ici, kl))
table_models_interest |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = "value_type", values_from = "value")
table_models_interest
table_models_interest |>
select(-sample)
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl))
table_models_interest |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl))
table_models_interest |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(result_type, name), values_from = value)
table_models_interest |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value)
table_models_interest
table_models_interest |>
relocate(dataset, .before = recalib)
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value)
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value)
knitr::kable(
align = str_c("l", str_c(rep("c", 3*3), collapse = ""), collapse = ""),
escape = FALSE, booktabs = T, digits = 3, format = "markdown",
col.names = c(
"Dataset", "Optim.",
rep(c("BS", "ICI", "KL"), 3)
)
)
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value) |>
knitr::kable(
align = str_c("l", str_c(rep("c", 3*3), collapse = ""), collapse = ""),
escape = FALSE, booktabs = T, digits = 3, format = "markdown",
col.names = c(
"Dataset", "Optim.",
rep(c("BS", "ICI", "KL"), 3)
)
)
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value) |>
knitr::kable(
align = str_c("l", str_c(rep("c", 3*3), collapse = ""), collapse = ""),
escape = FALSE, booktabs = T, digits = 3, format = "markdown",
col.names = c(
"Dataset", "Optim.",
rep(c("BS", "ICI", "KL"), 3)
)
) |>
kableExtra::collapse_rows(columns = 1:2, valign = "top")
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value) |>
knitr::kable(
align = str_c("l", str_c(rep("c", 3*3), collapse = ""), collapse = ""),
escape = FALSE, booktabs = T, digits = 3, format = "markdown",
col.names = c(
"Dataset", "Optim.",
rep(c("BS", "ICI", "KL"), 3)
)
) |>
kableExtra::collapse_rows(columns = 1, valign = "top") |>
kableExtra::add_header_above(
c(" " = 2,
"None" = 3,
"Platt" = 3,
"Isotonic" = 3
)
)
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value) |>
knitr::kable(
align = str_c("l", str_c(rep("c", 3*3), collapse = ""), collapse = ""),
escape = FALSE, booktabs = T, digits = 3, format = "markdown",
col.names = c(
"Dataset", "Optim.",
rep(c("BS", "ICI", "KL"), 3)
)
) |>
kableExtra::collapse_rows(columns = 1, valign = "top") |>
kableExtra::add_header_above(
c(" " = 2,
"None" = 3,
"Platt" = 3,
"Isotonic" = 3
)
) |>
kableExtra::scroll_box(fixed_thead = TRUE, height = "500px")
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value) |>
knitr::kable(
align = str_c("l", str_c(rep("c", 3*3), collapse = ""), collapse = ""),
escape = FALSE, booktabs = T, digits = 3, format = "markdown",
col.names = c(
"Dataset", "Optim.",
rep(c("BS", "ICI", "KL"), 3)
)
) |>
kableExtra::collapse_rows(columns = 1, valign = "top") |>
kableExtra::add_header_below(
c(" " = 2,
"None" = 3,
"Platt" = 3,
"Isotonic" = 3
)
) |>
kableExtra::scroll_box(fixed_thead = TRUE, height = "500px")
table_models_interest |>
relocate(dataset, .before = recalib) |>
select(-sample, -AUC) |>
pivot_longer(cols = c(brier, ici, kl)) |>
pivot_wider(names_from = c(recalib, name), values_from = value) |>
knitr::kable(
align = str_c("l", str_c(rep("c", 3*3), collapse = ""), collapse = ""),
escape = FALSE, booktabs = T, digits = 3, format = "latex",
col.names = c(
"Dataset", "Optim.",
rep(c("BS", "ICI", "KL"), 3)
)
) |>
kableExtra::collapse_rows(columns = 1, valign = "top") |>
kableExtra::add_header_above(
c(" " = 2,
"None" = 3,
"Platt" = 3,
"Isotonic" = 3
)
)
.7*.8
.7*.2
